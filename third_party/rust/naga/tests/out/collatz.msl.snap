---
source: tests/snapshots.rs
expression: msl
---
#include <metal_stdlib>
#include <simd/simd.h>

typedef metal::uint3 type;

typedef uint type1;

typedef type1 type2[1];

struct PrimeIndices {
    type2 data;
};

constexpr constant unsigned const_0u = 0u;
constexpr constant unsigned const_1u = 1u;
constexpr constant unsigned const_2u = 2u;
constexpr constant unsigned const_3u = 3u;
type1 collatz_iterations(
    type1 n_base
) {
    type1 n;
    type1 i = const_0u;
    n = n_base;
    while(true) {
        if ((n <= const_1u)) {
            break;
        }
        if (((n % const_2u) == const_0u)) {
            n = (n / const_2u);
        } else {
            n = ((const_3u * n) + const_1u);
        }
        i = (i + const_1u);
    }
    return i;
}

kernel void main1(
    type global_id [[thread_position_in_grid]],
    device PrimeIndices& v_indices [[buffer(0)]]
) {
    v_indices.data[global_id.x] = collatz_iterations(v_indices.data[global_id.x]);
    return ;
}


[property.https.html]
  expected: TIMEOUT
  [cross-origin > w => w.blur()]
    expected: FAIL

  [cross-origin > w => w.close()]
    expected:
      if webrender and not debug: [FAIL, TIMEOUT]
      FAIL

  [same-site > w => w.opener]
    expected: NOTRUN

  [same-site > w => w.window]
    expected: NOTRUN

  [same-site > w => w.blur()]
    expected: NOTRUN

  [same-site > w => w.focus()]
    expected: NOTRUN

  [cross-origin > w => w.postMessage("", "")]
    expected: NOTRUN

  [cross-origin > w => w.top]
    expected: NOTRUN

  [cross-origin > w => w.opener = ""]
    expected: NOTRUN

  [same-site > w => w.top]
    expected: NOTRUN

  [cross-origin > w => w.location]
    expected: NOTRUN

  [same-site > w => w["test"\]]
    expected: NOTRUN

  [cross-origin > w => w.location = "#"]
    expected: NOTRUN

  [cross-origin > w => w.length]
    expected:
      if debug: TIMEOUT
      NOTRUN

  [same-site > w => w.opener = ""]
    expected: NOTRUN

  [same-site > w => w.postMessage("")]
    expected: NOTRUN

  [cross-origin > w => w.closed]
    expected:
      if not debug and (os == "linux") and not webrender and (processor == "x86"): [TIMEOUT, FAIL]
      if not debug and (os == "linux") and not webrender and (processor == "x86_64"): [TIMEOUT, FAIL]
      if not debug and (os == "linux") and webrender: [TIMEOUT, NOTRUN]
      if not debug and (os == "mac"): TIMEOUT
      if not debug and (os == "win"): [TIMEOUT, NOTRUN]
      FAIL

  [same-site > w => w.location = "#"]
    expected: NOTRUN

  [cross-origin > w => w.self]
    expected: NOTRUN

  [same-site > w => w.postMessage("", "")]
    expected: NOTRUN

  [same-site > w => w.close()]
    expected: NOTRUN

  [same-site > w => w.frames]
    expected: NOTRUN

  [same-site > w => w.length]
    expected: NOTRUN

  [same-site > w => w.closed]
    expected: NOTRUN

  [same-site > w => w.self]
    expected: NOTRUN

  [cross-origin > w => w.opener]
    expected: NOTRUN

  [cross-origin > w => w.frames]
    expected:
      if (os == "linux") and debug and webrender and not fission: [FAIL, TIMEOUT]
      if (os == "linux") and debug and webrender and fission: [FAIL, TIMEOUT]
      if (os == "linux") and not debug and not webrender and (processor == "x86_64"): [NOTRUN, FAIL, TIMEOUT]
      if (os == "linux") and not debug and not webrender and (processor == "x86"): [NOTRUN, FAIL, TIMEOUT]
      if (os == "linux") and debug and not webrender: [FAIL, TIMEOUT]
      if (os == "win") and debug: FAIL
      if (os == "mac") and debug: [TIMEOUT, FAIL, NOTRUN]
      NOTRUN

  [cross-origin > w => w[0\]]
    expected:
      if not debug and (os == "linux") and not webrender: [TIMEOUT, NOTRUN]
      if debug and (os == "linux"): TIMEOUT
      if debug and (os == "win"): TIMEOUT
      if debug and (os == "mac"): [TIMEOUT, NOTRUN]
      NOTRUN

  [same-site > w => w[0\]]
    expected: NOTRUN

  [same-site > w => w.location]
    expected: NOTRUN

  [cross-origin > w => w.focus()]
    expected:
      if (os == "linux") and ccov: TIMEOUT
      if not debug and (processor == "x86_64") and (os == "linux") and not webrender: [NOTRUN, FAIL]
      if not debug and (processor == "x86_64") and (os == "linux") and webrender: NOTRUN
      if not debug and (processor == "x86_64") and (os == "mac"): NOTRUN
      if not debug and (processor == "x86_64") and (os == "win"): NOTRUN
      if not debug and (processor == "x86"): [NOTRUN, FAIL]
      if debug and (os == "mac"): [FAIL, TIMEOUT]
      FAIL

  [cross-origin > w => w["test"\]]
    expected: NOTRUN

  [cross-origin > w => w.postMessage("")]
    expected: NOTRUN

  [cross-origin > w => w.window]
    expected: NOTRUN


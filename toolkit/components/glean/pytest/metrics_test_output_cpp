// -*- mode: C++ -*-

// AUTOGENERATED BY glean_parser.  DO NOT EDIT.

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#ifndef mozilla_Metrics_h
#define mozilla_Metrics_h

#include "mozilla/glean/MetricTypes.h"

namespace mozilla {
namespace glean {

namespace test {
    /**
     * generated from test.boolean_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::BooleanMetric boolean_metric(1);

    /**
     * generated from test.labeled_boolean_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::LabeledBooleanMetric labeled_boolean_metric(2);

    /**
     * generated from test.labeled_boolean_metric_labels
     *
     * A multi-line
     * description
     */
    constexpr impl::LabeledBooleanMetric labeled_boolean_metric_labels(3);

    /**
     * generated from test.counter_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::CounterMetric counter_metric(4);

    /**
     * generated from test.labeled_counter_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::LabeledCounterMetric labeled_counter_metric(5);

    /**
     * generated from test.labeled_counter_metric_labels
     *
     * A multi-line
     * description
     */
    constexpr impl::LabeledCounterMetric labeled_counter_metric_labels(6);

    /**
     * generated from test.string_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::StringMetric string_metric(7);

    /**
     * generated from test.labeled_string_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::LabeledStringMetric labeled_string_metric(8);

    /**
     * generated from test.labeled_string_metric_labels
     *
     * A multi-line
     * description
     */
    constexpr impl::LabeledStringMetric labeled_string_metric_labels(9);

    /**
     * generated from test.string_list_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::StringListMetric string_list_metric(10);

    /**
     * generated from test.timespan_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::TimespanMetric timespan_metric(11);

    /**
     * generated from test.timing_distribution_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::TimingDistributionMetric timing_distribution_metric(12);

    /**
     * generated from test.memory_distribution_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::MemoryDistributionMetric memory_distribution_metric(13);

    /**
     * generated from test.uuid_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::UuidMetric uuid_metric(14);

    /**
     * generated from test.datetime_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::DatetimeMetric datetime_metric(15);

    /**
     * generated from test.event_metric
     *
     * A multi-line
     * description
     */
    constexpr impl::EventMetric event_metric(16);

    /**
     * generated from test.event_metric_with_extra
     *
     * A multi-line
     * description
     */
    constexpr impl::EventMetric event_metric_with_extra(17);

}

} // namespace glean
} // namespace mozilla
#endif // mozilla_Metrics_h
